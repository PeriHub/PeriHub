# SPDX-FileCopyrightText: 2023 PeriHub <https://github.com/PeriHub/PeriHub>
#
# SPDX-License-Identifier: Apache-2.0

name: CI
on:
  push:
    branches: [main]
    paths:
      - "frontend/**"
      - "backend/**"
  pull_request:
    branches: [main]
    paths:
      - "frontend/**"
      - "backend/**"
jobs:
  build:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker image
        run: docker build -t perihub/backend:dev ./backend
      - name: Run Docker container
        run: docker run -d -p 8000:8000 -v ./test:/app/simulations perihub/backend:dev
      - env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/setup-node@v5
        with:
          node-version: lts/*
      - name: Install dependencies
        working-directory: ./frontend/app
        run: npm ci
      - name: Install Playwright Browsers
        working-directory: ./frontend/app
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        working-directory: ./frontend/app
        run: npx playwright test
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: ./frontend/app/playwright-report/
          retention-days: 30
      - name: Build Docker image
        run: docker build -t perihub/frontend:dev ./frontend
      - name: Publish to Registry
        run: docker push perihub/backend:dev
      - name: Publish to Registry
        run: docker push perihub/frontend:dev
  # ci:
  #   defaults:
  #     run:
  #       working-directory: ./backend/app
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: ["3.11"]
  #       poetry-version: ["1.7.1"]
  #       os: [ubuntu-22.04]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: Run image
  #       uses: abatilo/actions-poetry@v2
  #       with:
  #         poetry-version: ${{ matrix.poetry-version }}
  #     - name: View poetry --help
  #       run: poetry --help
