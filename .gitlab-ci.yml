variables: &globals
  CI_REGISTRY_PATH: "registry.gitlab-test.dlr.de/hess_ja/images/"

stages:
  - build
  - deploy

build_job:
  image: docker/compose:latest
  services:
    - docker:dind 
  stage: build
  variables:
    GIT_STRATEGY: clone
    GIT_SSL_CAINFO: /etc/ssl/certs/ca-certificates.crt
    DOCKER_DRIVER: overlay2
    DOCKER_LANG: en_US.UTF-8
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_VERIFY: 1
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
    DOCKER_AUTH_CONFIG: '{ "auths": { "$CI_REGISTRY": { "auth": "$GIT_AUTH" }, "https://index.docker.io/v1/": { "auth": "$DOCKER_AUTH" }}}'
    FF_ENABLE_BASH_EXIT_CODE_CHECK: 1
  before_script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - echo -e "GITLAB_TOKEN=$GIT_TOKEN\nGITLAB_USER=f_testpa\nPERIDOX=False\nEXTERNAL=False\nFASERVICES=True" >> .env

    - docker pull ${CI_REGISTRY_PATH}peri_hub_api_image || true
    - docker build --pull --cache-from ${CI_REGISTRY_PATH}peri_hub_api_image -t ${CI_REGISTRY_PATH}peri_hub_api_image api/.
    - docker push ${CI_REGISTRY_PATH}peri_hub_api_image

    - docker pull ${CI_REGISTRY_PATH}peri_hub_gui_image || true
    - docker build --pull --cache-from ${CI_REGISTRY_PATH}peri_hub_gui_image -t ${CI_REGISTRY_PATH}peri_hub_gui_image --build-arg GITLAB_TOKEN=KVzxkFWxSdzY9WYRZkqR --build-arg GITLAB_USER=f_testpa gui/.
    - docker push ${CI_REGISTRY_PATH}peri_hub_gui_image

    - docker pull ${CI_REGISTRY_PATH}cron_image || true
    - docker build --pull --cache-from ${CI_REGISTRY_PATH}cron_image -t ${CI_REGISTRY_PATH}cron_image cron/.
    - docker push ${CI_REGISTRY_PATH}cron_image
  after_script:
    - docker logout

deploy_job:
  stage: deploy
  tags:
    - wsl
  before_script:
    - id
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - docker container stop periHubApi
    - docker container rm periHubApi
    - docker run --name periHubApi -d -p 6020:80 -v peridigm_volume:/app/peridigmJobs -v paraView_volume:/app/paraView -v secrets:/app/certs ${CI_REGISTRY_PATH}peri_hub_api_image
    - docker container stop periHubGui
    - docker container rm periHubGui
    - docker run --name periHubGui -d -p 6010:443 -v secrets:/app/certs ${CI_REGISTRY_PATH}peri_hub_gui_image
    - docker container stop periHubPeridigm
    - docker container rm periHubPeridigm
    - docker run --name periHubPeridigm -d -p 6030:80 -v peridigm_volume:/app/peridigmJobs ${CI_REGISTRY_PATH}peridigm_image
    - docker container stop periHubCron
    - docker container rm periHubCron
    - docker run --name periHubCron -d -p 6040:80 ${CI_REGISTRY_PATH}cron_image

